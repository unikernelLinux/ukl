#!/bin/bash
set -x
export HOME=/root
export LOGNAME=root
export TERM=vt100
export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin
export ENV="HOME=$HOME LOGNAME=$LOGNAME TERM=$TERM PATH=$PATH"

# setup standard file system view
mount -t proc /proc /proc
mount -t sysfs /sys /sys

# take care of /dev 1) try using devtmpfs and devpts or 2) dev of exiting fs and devpts
if ! mount -t devtmpfs -o mode=0755 udev /dev; then
  # failed to mount devtmpfs
  # so add a few useful things if not already in file system
  echo "W: devtmpfs not available, falling back to tmpfs for /dev"
  [[ -e /dev/console ]] || mknod -m 0600 /dev/console c 5 1
  [[ -e /dev/null ]] || mknod /dev/null c 1 3
  [[ -e /dev/zero ]] || mknod /dev/zero c 1 5
  [[ -e /dev/random ]] || mknod /dev/random c 1 8
  [[ -e /dev/urandom ]] || mknod /dev/urandom c 1 9
fi

[[ -e /dev/pts ]] || mkdir /dev/pts
mount -t devpts devpts /dev/pts

# Some things don't work properly without /etc/mtab.
ln -sf /proc/mounts /etc/mtab

# Print cmdline
echo "CMDLINE" >> /log
cat /proc/cmdline >> /log

# Running experimental setup scripts
echo "Running Setup scripts" >> /log
./exp/disable_ht.sh >> /log
./exp/turbo-boost.sh disable >> /log
echo "Done" >> /log

# Configure the requested network interface by MAC($2) to use IP($1)
if [ -n "${1}" ]; then
	IP=$1
	if [ -n "${2}" ]; then
		MAC=$2
		INF=`/usr/sbin/ip -o link | awk -F ': ' -vIGNORECASE=1 '!/link\/ieee802\.11/ && /'"$MAC"'/ { print $2 }'`
	else
		INF="eth0"
	fi
	/usr/sbin/ip address flush dev $INF
	/usr/sbin/ip address add $IP/24 brd + dev $INF
	/usr/sbin/ip link set $INF up

	if [ -n "${3}" ]; then
		# Receive queue affinity has been requested, we will try and create a receive queue per CPU and
		# bind each one to a single CPU to preserve data locality
		CPU_CNT=$(nproc)
		/usr/sbin/ethtool -L ${CPU_CNT} ${INF}
		
		PCI_ADDR=$(basename $(readlink /sys/class/net/${INF}/device))
		CPU_IDX=0
		grep ${PCI_ADDR} /proc/interrupts | while read -r line; do
			IRQ=$(echo $line | cut -d ':' -f1)
			echo "${CPU_IDX}" > /proc/irq/${IRQ}/smp_affinity_list
			((CPU_IDX++))
			if (( CPU_IDX >= CPU_CNT )); then
				CPU_IDX=0
			fi
		done
	fi
fi

/usr/sbin/ip address

# Run sshd
/usr/sbin/dropbear -E -R -p 22

# Disable real-time task throttling
echo -1 > /proc/sys/kernel/sched_rt_runtime_us

sleep 5

echo "UKL BOOTED"

# Start UKL process
@TRIGGER@

